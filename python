import paho.mqtt.client as mqtt
import json
import mysql.connector
from datetime import datetime

mqtt_broker = ""
mqtt_topic = ["topic1", "topic2"]
mqtt_username = ""
mqtt_password = ""

db_host = "localhost"
db_user = ""
db_password = ""
db_database = ""

def on_connect(client, userdata, flags, rc):
    if rc == 0:
        print("Connected to MQTT Broker")
        for topic in mqtt_topic:
            client.subscribe(topic)
    else:
        print("Failed to connect, result code " + str(rc))

def on_message(client, userdata, msg):
    print(f"Received message on topic {msg.topic}: {msg.payload}")
    try:
        if msg.topic == mqtt_topic[0]:
            save_to_database_dht(msg.payload)
        elif msg.topic == mqtt_topic[1]:
            save_to_database_pzem(msg.payload)
        else:
            print("Unknown topic")
    except Exception as e:
        print(f"Error processing message: {e}")

def save_to_database_dht(payload):
    try:
        data = json.loads(payload.decode("utf-8"))

        db_connection = mysql.connector.connect(
            host=db_host,
            user=db_user,
            password=db_password,
            database=db_database
        )

        cursor = db_connection.cursor()

        query = "INSERT INTO dhtrecords (record_time, humidity_rate, temperature, fk_id) VALUES(%s ,%s, %s, %s)"
        timestamp = datetime.now().strftime('%Y-%m-%d %H:%M:%S')
        values = (timestamp, data["humidity"], data["temperature"], data["fk_id"])
        cursor.execute(query, values)

        db_connection.commit()

    except mysql.connector.Error as err:
        print(f"MySQL Error: {err}")
    finally:
        if cursor:
            cursor.close()
        if db_connection.is_connected():
            db_connection.close()
            
def save_to_database_pzem(payload):
    try:
        data = json.loads(payload.decode("utf-8"))

        db_connection = mysql.connector.connect(
            host=db_host,
            user=db_user,
            password=db_password,
            database=db_database
        )

        cursor = db_connection.cursor()

        query = "INSERT INTO pzemrecords (record_time, Voltage, Current, Power, Energy, PF, Frequency, fk_id) VALUES (%s, %s, %s, %s, %s, %s, %s, %s)"
        timestamp = datetime.now().strftime('%Y-%m-%d %H:%M:%S')

        voltage = data["voltage"] if data["voltage"] != 0 else None
        current = data["current"] if data["current"] != 0 else None
        power = data["power"] if data["power"] != 0 else None
        energy = data["energy"] if data["energy"] != 0 else None
        pf = data["pf"] if data["pf"] != 0 else None
        frequency = data["frequency"] if data["frequency"] != 0 else None

        values = (timestamp, voltage, current, power, energy, pf, frequency, data["fk_id"])
        cursor.execute(query, values)

        db_connection.commit()

    except mysql.connector.Error as err:
        print(f"MySQL Error: {err}")
    finally:
        if cursor:
            cursor.close()
        if db_connection.is_connected():
            db_connection.close()


client = mqtt.Client()
client.on_connect = on_connect
client.on_message = on_message

client.username_pw_set(mqtt_username, mqtt_password)
client.connect(mqtt_broker, 1883, 60)
client.loop_forever()
